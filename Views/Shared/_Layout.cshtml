@{
    Layout = null;
    var appTitle = "SmartSite";
}
<!doctype html>
<html lang="pt-br" data-bs-theme="light">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>@appTitle - @ViewBag.Title</title>

    <link href="https://cdn.jsdelivr.net/npm/@@tabler/core@1.0.0-beta20/dist/css/tabler.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/@@tabler/icons-webfont@latest/tabler-icons.min.css" rel="stylesheet" />

    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>
<body>
    @await Html.PartialAsync("_Header")

    <div class="page">
        @* A sidebar de desktop e o conteúdo usam um sistema de grid para garantir que fiquem lado a lado *@
        <div class="row g-0">
            @* Sidebar para Desktop - visível a partir de md, usa col-md-3 do grid *@
            <aside id="desktop-sidebar" class="col-12 col-md-3 col-xl-2 app-sidenav d-none d-md-block">
                @await Html.PartialAsync("_Sidebar")
            </aside>

            @* Conteúdo principal *@
            <main id="main-content" class="col-12 col-md-9 col-xl-10 py-4 px-4">
                @RenderBody()
            </main>
        </div>
    </div>

    @* Sidebar para Mobile - É um offcanvas, visível apenas em telas pequenas *@
    <div class="offcanvas offcanvas-start app-offcanvas-mobile d-md-none" tabindex="-1" id="mobile-sidebar" aria-labelledby="offcanvasLabel">
        <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="offcanvasLabel">Menu</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        @await Html.PartialAsync("_Sidebar")
    </div>

    <script src="https://cdn.jsdelivr.net/npm/@@tabler/core@1.0.0-beta20/dist/js/tabler.min.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            // 1. Lógica para marcar o link ativo da sidebar
            const currentPath = window.location.pathname.toLowerCase();
            if (currentPath === '/' || currentPath.includes('/home')) {
                document.getElementById('nav-dashboard')?.classList.add('active');
            } else {
                const activeLink = document.querySelector(`.snav-link[href="${currentPath}"]`) || document.querySelector(`.snav-sublink[href="${currentPath}"]`);
                if (activeLink) {
                    activeLink.classList.add('active');
                    activeLink.closest('.snav-group')?.setAttribute('open', '');
                }
            }

             // 1. Lógica para colapsar/expandir a sidebar no desktop (clique)
            const desktopToggler = document.getElementById('sidebar-toggler-desktop');
            const desktopSidebar = document.getElementById('desktop-sidebar');
            const mainContent = document.getElementById('main-content');

            if (desktopToggler && desktopSidebar) {
                desktopToggler.addEventListener('click', function() {
                    document.body.classList.toggle('sidebar-collapsed');

                    if (document.body.classList.contains('sidebar-collapsed')) {
                        mainContent.classList.remove('col-md-9', 'col-xl-10');
                        mainContent.classList.add('col-md-11', 'col-xl-10');
                    } else {
                        mainContent.classList.remove('col-md-11', 'col-xl-10');
                        mainContent.classList.add('col-md-9', 'col-xl-10');
                    }
                });
            }

            // 2. Lógica para expandir a sidebar no hover (apenas se estiver colapsada)
            if (desktopSidebar) {
                desktopSidebar.addEventListener('mouseenter', function() {
                    // Se o corpo tiver a classe de colapsado, adicionamos a classe de hover
                    if (document.body.classList.contains('sidebar-collapsed')) {
                        desktopSidebar.classList.add('sidebar-hover-expand');
                    }
                });

                desktopSidebar.addEventListener('mouseleave', function() {
                    // Remove a classe de hover
                    desktopSidebar.classList.remove('sidebar-hover-expand');
                });
            }

            // 3. Inicializa todos os tooltips do Bootstrap
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl, {
                    delay: { show: 500, hide: 100 }
                });
            });
        });
    </script>
</body>
</html>